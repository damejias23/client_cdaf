/*
Ncdaf_EventExposure

CDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CdafEventSubsSyncInfo CDAF Event Subscriptions Information for synchronization
type CdafEventSubsSyncInfo struct {
	SubscriptionInfo CdafEventSubscriptionInfo `json:"subscriptionInfo"`
}

// NewCdafEventSubsSyncInfo instantiates a new CdafEventSubsSyncInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdafEventSubsSyncInfo(subscriptionInfo CdafEventSubscriptionInfo) *CdafEventSubsSyncInfo {
	this := CdafEventSubsSyncInfo{}
	this.SubscriptionInfo = subscriptionInfo
	return &this
}

// NewCdafEventSubsSyncInfoWithDefaults instantiates a new CdafEventSubsSyncInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdafEventSubsSyncInfoWithDefaults() *CdafEventSubsSyncInfo {
	this := CdafEventSubsSyncInfo{}
	return &this
}

// GetSubscriptionInfo returns the SubscriptionInfo field value
func (o *CdafEventSubsSyncInfo) GetSubscriptionInfo() CdafEventSubscriptionInfo {
	if o == nil {
		var ret CdafEventSubscriptionInfo
		return ret
	}

	return o.SubscriptionInfo
}

// GetSubscriptionInfoOk returns a tuple with the SubscriptionInfo field value
// and a boolean to check if the value has been set.
func (o *CdafEventSubsSyncInfo) GetSubscriptionInfoOk() (*CdafEventSubscriptionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionInfo, true
}

// SetSubscriptionInfo sets field value
func (o *CdafEventSubsSyncInfo) SetSubscriptionInfo(v CdafEventSubscriptionInfo) {
	o.SubscriptionInfo = v
}

func (o CdafEventSubsSyncInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscriptionInfo"] = o.SubscriptionInfo
	}
	return json.Marshal(toSerialize)
}

type NullableCdafEventSubsSyncInfo struct {
	value *CdafEventSubsSyncInfo
	isSet bool
}

func (v NullableCdafEventSubsSyncInfo) Get() *CdafEventSubsSyncInfo {
	return v.value
}

func (v *NullableCdafEventSubsSyncInfo) Set(val *CdafEventSubsSyncInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCdafEventSubsSyncInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCdafEventSubsSyncInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdafEventSubsSyncInfo(val *CdafEventSubsSyncInfo) *NullableCdafEventSubsSyncInfo {
	return &NullableCdafEventSubsSyncInfo{value: val, isSet: true}
}

func (v NullableCdafEventSubsSyncInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdafEventSubsSyncInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


