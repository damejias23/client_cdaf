/*
Ncdaf_EventExposure

CDAF Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdaf

import (
	"encoding/json"
)

// CdafCreateEventSubscription Data within a create CDAF event subscription request
type CdafCreateEventSubscription struct {
	Subscription CdafEventSubscription `json:"subscription"`
}

// NewCdafCreateEventSubscription instantiates a new CdafCreateEventSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdafCreateEventSubscription(subscription CdafEventSubscription) *CdafCreateEventSubscription {
	this := CdafCreateEventSubscription{}
	this.Subscription = subscription
	return &this
}

// NewCdafCreateEventSubscriptionWithDefaults instantiates a new CdafCreateEventSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdafCreateEventSubscriptionWithDefaults() *CdafCreateEventSubscription {
	this := CdafCreateEventSubscription{}
	return &this
}

// GetSubscription returns the Subscription field value
func (o *CdafCreateEventSubscription) GetSubscription() CdafEventSubscription {
	if o == nil {
		var ret CdafEventSubscription
		return ret
	}

	return o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value
// and a boolean to check if the value has been set.
func (o *CdafCreateEventSubscription) GetSubscriptionOk() (*CdafEventSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subscription, true
}

// SetSubscription sets field value
func (o *CdafCreateEventSubscription) SetSubscription(v CdafEventSubscription) {
	o.Subscription = v
}

func (o CdafCreateEventSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subscription"] = o.Subscription
	}
	return json.Marshal(toSerialize)
}

type NullableCdafCreateEventSubscription struct {
	value *CdafCreateEventSubscription
	isSet bool
}

func (v NullableCdafCreateEventSubscription) Get() *CdafCreateEventSubscription {
	return v.value
}

func (v *NullableCdafCreateEventSubscription) Set(val *CdafCreateEventSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableCdafCreateEventSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableCdafCreateEventSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdafCreateEventSubscription(val *CdafCreateEventSubscription) *NullableCdafCreateEventSubscription {
	return &NullableCdafCreateEventSubscription{value: val, isSet: true}
}

func (v NullableCdafCreateEventSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdafCreateEventSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


